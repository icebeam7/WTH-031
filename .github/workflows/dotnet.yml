name: .NET CI
 
env:
  registryName: t24r6lgxvtd56wthreg.azurecr.io
  repositoryName: wth/razorcore
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  dockerfilePath: Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}

on:
  push:
    branches: [ main ]
    paths:
    - 'Application/**'
    - '.github/workflows/dotnet.yml'

  pull_request:
    branches: [ main ]
    paths: Application/*

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
   
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj

    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj

    - uses: actions/github-script@v6
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

  dockerBuildPush:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Container Registry Login
      uses: docker/login-action@v1.9.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ env.registryName }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
      
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag

  deploy-to-dev:
  
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment:
      name: dev
      url: https://t24r6lgxvtd56-dev.azurewebsites.net/
    
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: 't24r6lgxvtd56-dev'
          images: ${{secrets.ACR_NAME}}/wth/razorcore:${{github.run_number}}

  deploy-to-test:
  
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    environment:
      name: test
      url: https://t24r6lgxvtd56-test.azurewebsites.net/
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 't24r6lgxvtd56-test'
        images: ${{secrets.ACR_NAME}}/wth/razorcore:${{github.run_number}}

  deploy-to-prod:
  
    runs-on: ubuntu-latest
    needs: deploy-to-test
    environment:
      name: prod
      url: https://t24r6lgxvtd56-prod.azurewebsites.net/
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 't24r6lgxvtd56-prod'
        images: ${{secrets.ACR_NAME}}/wth/razorcore:${{github.run_number}}
